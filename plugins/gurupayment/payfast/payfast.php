<?php

// no direct access
defined( '_JEXEC' ) or die( 'Restricted access' );
jimport( 'joomla.plugin.plugin' );


class  plgGurupaymentPayFast extends JPlugin
{

	function __construct(& $subject, $config)
	{
		parent::__construct($subject, $config);
		//Set the language in the class
		$config = JFactory::getConfig();
	}

	/* Internal use functions */
	function buildLayoutPath($layout) {
		$app = JFactory::getApplication();
		$core_file 	= dirname(__FILE__).DS.$this->_name.DS.'tmpl'.DS.'default.php';
		$override		= JPATH_BASE.DS.'templates'.DS.$app->getTemplate().DS.'html'.DS.'plugins'.DS.$this->_type.DS.$this->_name.DS.$layout.'.php';

		if(JFile::exists($override))
		{
			return $override;
		}
		else
		{
	  		return $core_file;
		}
	}
	
	//Builds the layout to be shown, along with hidden fields.
	function buildLayout($vars, $layout = 'default' )
	{
		// Load the layout & push variables
		ob_start();
        $layout = $this->buildLayoutPath($layout);
        include($layout);
        $html = ob_get_contents(); 
        ob_end_clean();
		return $html;
	}

	// Used to Build List of Payment Gateway in the respective Components
	function onTP_GetInfo($config)
	{
		if(!in_array($this->_name,$config))
		return;
		$obj 		= new stdClass;
		$obj->name 	=$this->params->get( 'plugin_name' );
		$obj->id	= $this->_name;
		return $obj;
	}

	//Constructs the Payment form in case of On Site Payment gateways like Auth.net & constructs the Submit button in case of offsite ones like Paypal
	function onTP_GetHTML($vars)
	{
		//$vars->action_url = plgPaymentStripeHelper::buildPaypalUrl();
		//Take this receiver email address from plugin if component not provided it
		//if(empty($vars->business))
		//$vars->business = $this->params->get('business');
		
		$html = $this->buildLayout($vars);

		return $html;
	}

	function onSendPayment(&$post){
		if($post['processor'] != 'payfast'){
			return false;
		}

		$params = json_decode($post["params"], true);

		$link_params = array();
		$link_params['option'] = $post['option'];
		$link_params['controller'] = $post['controller'];
		$link_params['task'] = $post['task'];
		$link_params['processor'] = $post['processor'];
		$link_params['order_id'] = @$post['order_id'];
		$link_params['sid'] = @$post['sid'];
		$link_params['Itemid'] = isset($post['Itemid']) ? $post['Itemid'] : '0';
		$notify_url = JURI::base().'index.php?'.$this->StripeArray2Url($link_params).'&customer_id='.intval($post['customer_id']).'&pay=ipn';
		$return = JURI::root().'index.php?option=com_guru&view=guruorders&layout=mycourses';
		$cancel_return = JURI::root().'index.php?option=com_guru&controller=guruBuy&processor='.$post['processor'].'&task='.$post['task'].'&sid='.$post['sid'].'&order_id='.$post['order_id'].'&pay=fail';

		$vars = new stdClass();
		$vars->notify_url = $notify_url;
		$vars->return_url = $return;
		$vars->cancel_url = $cancel_return;
		$vars->item_name = "";
		$vars->amount = "";

		$product_names = array();

		foreach($post['products'] as $i => $item){
			if ($i < 0){
				continue;
			}

            $product_names[] = $item["name"];
        }

        if(count($product_names) > 0){
        	$vars->item_name = implode(", ", $product_names);
        }

        $db = JFactory::getDbo();
		$sql = "select `userid`, `amount`, `amount_paid` from #__guru_order where `id`=".intval($link_params['order_id']);
		$db->setQuery($sql);
		$db->query();
		$order_details = $db->loadAssocList();
		
		$customer_id = $order_details["0"]["userid"];
		$gross_amount = $order_details["0"]["amount"];
		
		if($order_details["0"]["amount_paid"] != -1){
			$gross_amount = $order_details["0"]["amount_paid"];
		}

		$vars->amount = $gross_amount;

		$vars->merchant_id = $params["merchant_id"];
		$vars->merchant_key = $params["merchant_key"];
		$vars->testingMode = $params["testingMode"];

		$user = JFactory::getUser();
		$vars->name_first = $user->name;
		$vars->name_last = "";
		$vars->email_address = $user->email;
		$vars->m_payment_id = $post['order_id'];

		$sql = "select `firstname`, `lastname` from #__guru_customer where `id`=".intval($post['customer_id']);
		$db->setQuery($sql);
		$db->query();
		$customer_details = $db->loadAssocList();

		if(isset($customer_details) && count($customer_details) > 0){
			$vars->name_first = $customer_details["0"]["firstname"];
			$vars->name_last = $customer_details["0"]["lastname"];
		}

		ob_start();
        $layout = $this->buildLayoutPath("default");
        include($layout);
        $html = ob_get_contents(); 
        ob_end_clean();

		return $html;
	}
	
	function onReceivePayment($data) 
	{

		if($data['processor'] != 'payfast'){
			return 0;
		}
		
		// retrieve the token generated by stripe.js
		$amount = $_POST["amount_gross"];
		$order_id = $_GET["order_id"];

		$db = JFactory::getDbo();
		$sql = "select `userid`, `amount`, `amount_paid` from #__guru_order where `id`=".intval($order_id);
		$db->setQuery($sql);
		$db->query();
		$order_details = $db->loadAssocList();
		
		$customer_id = $order_details["0"]["userid"];
		$gross_amount = $order_details["0"]["amount"];
		
		if($order_details["0"]["amount_paid"] != -1){
			$gross_amount = $order_details["0"]["amount_paid"];
		}
		
		require_once(JPATH_SITE . '/components/com_guru/models/gurubuy.php');
		$guru_buy_model = new guruModelguruBuy();
		$submit_array = array("customer_id" => intval($customer_id), "order_id" => intval($order_id), "price" => $gross_amount);

		$payment_status = $_POST["payment_status"];
		
		if($payment_status == "COMPLETE"){
			$guru_buy_model->proccessSuccess("guruBuy", $submit_array, false);
		}
		else{
			$guru_buy_model->proccessFail("guruBuy", $submit_array);
		}
	}	
	
	//@JOMSOCIALHACK - When I pay with paypal or authorize, the transaction is missing - start
	public function onTP_UpdatePayment($args){
		/*$db 	= JFactory::getDBO();
		$sql 	= "	UPDATE #__digistore_paypal_expresscheckout_log SET order_id = ".$args['order_id'].", status = 1 WHERE `user_id` = " . $args['customer_id'] . " AND `cart_sid` = " . $args['sid'] . " AND status = 0";
		$db->setQuery($sql);
		$db->execute();
		//if($db->getErrorNum()){
		//	echo $db->getErrorMsg(); exit;
		//}
		return true;*/
	}	
	//@JOMSOCIALHACK - When I pay with paypal or authorize, the transaction is missing - end	
	
	function translateResponse($payment_status){
		/*foreach($this->responseStatus as $key=>$value)
		{
			if($key==$payment_status)
			return $value;		
		}*/
	}

	function onTP_Storelog($data)
	{
		/*$log = plgPaymentPaypalHelper::Storelog($this->_name,$data);*/
	}

    function StripeArray2Url($param){
		foreach($param AS $k => $v){
			$out[] = "$k=$v";
		}
		return implode('&', $out );
	}
}